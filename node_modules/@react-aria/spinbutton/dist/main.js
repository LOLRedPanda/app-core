var $2BLaI$reactarialiveannouncer = require("@react-aria/live-announcer");
var $2BLaI$react = require("react");
var $2BLaI$reactariautils = require("@react-aria/utils");
var $2BLaI$reactariai18n = require("@react-aria/i18n");

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

$parcel$export(module.exports, "useSpinButton", () => $37bbd4c129023f61$export$e908e06f4b8e3402);
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 
var $55fd103defc81437$exports = {};
var $db6c23092fbfea22$exports = {};
$db6c23092fbfea22$exports = {
    "Empty": `فارغ`
};


var $f4b3121a918895c4$exports = {};
$f4b3121a918895c4$exports = {
    "Empty": `Изпразни`
};


var $d01cc02a83842f4c$exports = {};
$d01cc02a83842f4c$exports = {
    "Empty": `Prázdné`
};


var $ae20f188998ad249$exports = {};
$ae20f188998ad249$exports = {
    "Empty": `Tom`
};


var $f17ee93fe12c77e5$exports = {};
$f17ee93fe12c77e5$exports = {
    "Empty": `Leer`
};


var $9691dc6a69dd5ba9$exports = {};
$9691dc6a69dd5ba9$exports = {
    "Empty": `Άδειο`
};


var $b2385949437f9917$exports = {};
$b2385949437f9917$exports = {
    "Empty": `Empty`
};


var $ed6d4429037ec60d$exports = {};
$ed6d4429037ec60d$exports = {
    "Empty": `Vacío`
};


var $c9cb32f5c221f118$exports = {};
$c9cb32f5c221f118$exports = {
    "Empty": `Tühjenda`
};


var $5be8f6c4ad248dda$exports = {};
$5be8f6c4ad248dda$exports = {
    "Empty": `Tyhjä`
};


var $3f46a428519ddd7e$exports = {};
$3f46a428519ddd7e$exports = {
    "Empty": `Vide`
};


var $41c7f98604688f35$exports = {};
$41c7f98604688f35$exports = {
    "Empty": `ריק`
};


var $183e97db82c2cbf0$exports = {};
$183e97db82c2cbf0$exports = {
    "Empty": `Prazno`
};


var $749cae0664a7dc03$exports = {};
$749cae0664a7dc03$exports = {
    "Empty": `Üres`
};


var $4129f25b282c341e$exports = {};
$4129f25b282c341e$exports = {
    "Empty": `Vuoto`
};


var $908925465e00dbfc$exports = {};
$908925465e00dbfc$exports = {
    "Empty": `空`
};


var $34fae452e2e356d9$exports = {};
$34fae452e2e356d9$exports = {
    "Empty": `비어 있음`
};


var $458e73ba0e56bdd4$exports = {};
$458e73ba0e56bdd4$exports = {
    "Empty": `Tuščias`
};


var $2ddf9ecf84010f95$exports = {};
$2ddf9ecf84010f95$exports = {
    "Empty": `Tukšs`
};


var $b787a09821b773ea$exports = {};
$b787a09821b773ea$exports = {
    "Empty": `Tom`
};


var $6b951cc1b0de6d71$exports = {};
$6b951cc1b0de6d71$exports = {
    "Empty": `Leeg`
};


var $fc3eb600d1c488fa$exports = {};
$fc3eb600d1c488fa$exports = {
    "Empty": `Pusty`
};


var $ba0f4e25830e4bbf$exports = {};
$ba0f4e25830e4bbf$exports = {
    "Empty": `Vazio`
};


var $2cd34c446640bd1d$exports = {};
$2cd34c446640bd1d$exports = {
    "Empty": `Vazio`
};


var $55c7bf6cdae0bed5$exports = {};
$55c7bf6cdae0bed5$exports = {
    "Empty": `Gol`
};


var $240e8ca0b043d76a$exports = {};
$240e8ca0b043d76a$exports = {
    "Empty": `Не заполнено`
};


var $c28c7ecdb94a1868$exports = {};
$c28c7ecdb94a1868$exports = {
    "Empty": `Prázdne`
};


var $c2d6776ba29b6517$exports = {};
$c2d6776ba29b6517$exports = {
    "Empty": `Prazen`
};


var $628464d96d5a7855$exports = {};
$628464d96d5a7855$exports = {
    "Empty": `Prazno`
};


var $5a1bcd0a675a6f60$exports = {};
$5a1bcd0a675a6f60$exports = {
    "Empty": `Tomt`
};


var $f71e9bc82e4a5a16$exports = {};
$f71e9bc82e4a5a16$exports = {
    "Empty": `Boş`
};


var $cb1ece2578f5693e$exports = {};
$cb1ece2578f5693e$exports = {
    "Empty": `Пусто`
};


var $d8ce7cc5e4398a80$exports = {};
$d8ce7cc5e4398a80$exports = {
    "Empty": `空`
};


var $8db5191ec1aacb53$exports = {};
$8db5191ec1aacb53$exports = {
    "Empty": `空白`
};


$55fd103defc81437$exports = {
    "ar-AE": $db6c23092fbfea22$exports,
    "bg-BG": $f4b3121a918895c4$exports,
    "cs-CZ": $d01cc02a83842f4c$exports,
    "da-DK": $ae20f188998ad249$exports,
    "de-DE": $f17ee93fe12c77e5$exports,
    "el-GR": $9691dc6a69dd5ba9$exports,
    "en-US": $b2385949437f9917$exports,
    "es-ES": $ed6d4429037ec60d$exports,
    "et-EE": $c9cb32f5c221f118$exports,
    "fi-FI": $5be8f6c4ad248dda$exports,
    "fr-FR": $3f46a428519ddd7e$exports,
    "he-IL": $41c7f98604688f35$exports,
    "hr-HR": $183e97db82c2cbf0$exports,
    "hu-HU": $749cae0664a7dc03$exports,
    "it-IT": $4129f25b282c341e$exports,
    "ja-JP": $908925465e00dbfc$exports,
    "ko-KR": $34fae452e2e356d9$exports,
    "lt-LT": $458e73ba0e56bdd4$exports,
    "lv-LV": $2ddf9ecf84010f95$exports,
    "nb-NO": $b787a09821b773ea$exports,
    "nl-NL": $6b951cc1b0de6d71$exports,
    "pl-PL": $fc3eb600d1c488fa$exports,
    "pt-BR": $ba0f4e25830e4bbf$exports,
    "pt-PT": $2cd34c446640bd1d$exports,
    "ro-RO": $55c7bf6cdae0bed5$exports,
    "ru-RU": $240e8ca0b043d76a$exports,
    "sk-SK": $c28c7ecdb94a1868$exports,
    "sl-SI": $c2d6776ba29b6517$exports,
    "sr-SP": $628464d96d5a7855$exports,
    "sv-SE": $5a1bcd0a675a6f60$exports,
    "tr-TR": $f71e9bc82e4a5a16$exports,
    "uk-UA": $cb1ece2578f5693e$exports,
    "zh-CN": $d8ce7cc5e4398a80$exports,
    "zh-TW": $8db5191ec1aacb53$exports
};





function $37bbd4c129023f61$export$e908e06f4b8e3402(props) {
    const _async = (0, $2BLaI$react.useRef)();
    let { value: value , textValue: textValue , minValue: minValue , maxValue: maxValue , isDisabled: isDisabled , isReadOnly: isReadOnly , isRequired: isRequired , onIncrement: onIncrement , onIncrementPage: onIncrementPage , onDecrement: onDecrement , onDecrementPage: onDecrementPage , onDecrementToMin: onDecrementToMin , onIncrementToMax: onIncrementToMax  } = props;
    const stringFormatter = (0, $2BLaI$reactariai18n.useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($55fd103defc81437$exports))));
    const propsRef = (0, $2BLaI$react.useRef)(props);
    propsRef.current = props;
    const clearAsync = ()=>clearTimeout(_async.current);
    // eslint-disable-next-line arrow-body-style
    (0, $2BLaI$react.useEffect)(()=>{
        return ()=>clearAsync();
    }, []);
    let onKeyDown = (e)=>{
        if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) return;
        switch(e.key){
            case "PageUp":
                if (onIncrementPage) {
                    e.preventDefault();
                    onIncrementPage();
                    break;
                }
            // fallthrough!
            case "ArrowUp":
            case "Up":
                if (onIncrement) {
                    e.preventDefault();
                    onIncrement();
                }
                break;
            case "PageDown":
                if (onDecrementPage) {
                    e.preventDefault();
                    onDecrementPage();
                    break;
                }
            // fallthrough
            case "ArrowDown":
            case "Down":
                if (onDecrement) {
                    e.preventDefault();
                    onDecrement();
                }
                break;
            case "Home":
                if (onDecrementToMin) {
                    e.preventDefault();
                    onDecrementToMin();
                }
                break;
            case "End":
                if (onIncrementToMax) {
                    e.preventDefault();
                    onIncrementToMax();
                }
                break;
        }
    };
    let isFocused = (0, $2BLaI$react.useRef)(false);
    let onFocus = ()=>{
        isFocused.current = true;
    };
    let onBlur = ()=>{
        isFocused.current = false;
    };
    // Replace Unicode hyphen-minus (U+002D) with minus sign (U+2212).
    // This ensures that macOS VoiceOver announces it as "minus" even with other characters between the minus sign
    // and the number (e.g. currency symbol). Otherwise it announces nothing because it assumes the character is a hyphen.
    // In addition, replace the empty string with the word "Empty" so that iOS VoiceOver does not read "50%" for an empty field.
    textValue = textValue === "" ? stringFormatter.format("Empty") : (textValue || `${value}`).replace("-", "−");
    (0, $2BLaI$react.useEffect)(()=>{
        if (isFocused.current) (0, $2BLaI$reactarialiveannouncer.announce)(textValue, "assertive");
    }, [
        textValue
    ]);
    const onIncrementPressStart = (0, $2BLaI$react.useCallback)((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onIncrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(maxValue) || isNaN(value) || value < maxValue) onIncrementPressStart(60);
        }, initialStepDelay);
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        onIncrement,
        maxValue,
        value
    ]);
    const onDecrementPressStart = (0, $2BLaI$react.useCallback)((initialStepDelay)=>{
        clearAsync();
        propsRef.current.onDecrement();
        // Start spinning after initial delay
        _async.current = window.setTimeout(()=>{
            if (isNaN(minValue) || isNaN(value) || value > minValue) onDecrementPressStart(60);
        }, initialStepDelay);
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        onDecrement,
        minValue,
        value
    ]);
    let cancelContextMenu = (e)=>{
        e.preventDefault();
    };
    let { addGlobalListener: addGlobalListener , removeAllGlobalListeners: removeAllGlobalListeners  } = (0, $2BLaI$reactariautils.useGlobalListeners)();
    return {
        spinButtonProps: {
            role: "spinbutton",
            "aria-valuenow": !isNaN(value) ? value : null,
            "aria-valuetext": textValue,
            "aria-valuemin": minValue,
            "aria-valuemax": maxValue,
            "aria-disabled": isDisabled || null,
            "aria-readonly": isReadOnly || null,
            "aria-required": isRequired || null,
            onKeyDown: onKeyDown,
            onFocus: onFocus,
            onBlur: onBlur
        },
        incrementButtonProps: {
            onPressStart: ()=>{
                onIncrementPressStart(400);
                addGlobalListener(window, "contextmenu", cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        },
        decrementButtonProps: {
            onPressStart: ()=>{
                onDecrementPressStart(400);
                addGlobalListener(window, "contextmenu", cancelContextMenu);
            },
            onPressEnd: ()=>{
                clearAsync();
                removeAllGlobalListeners();
            },
            onFocus: onFocus,
            onBlur: onBlur
        }
    };
}




//# sourceMappingURL=main.js.map
